--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.15) ~  Much Love, Ferib 

]]--

local StrToNumber = tonumber;
local Byte = string.byte;
local Char = string.char;
local Sub = string.sub;
local Subg = string.gsub;
local Rep = string.rep;
local Concat = table.concat;
local Insert = table.insert;
local LDExp = math.ldexp;
local GetFEnv = getfenv or function()
	return _ENV;
end;
local Setmetatable = setmetatable;
local PCall = pcall;
local Select = select;
local Unpack = unpack or table.unpack;
local ToNumber = tonumber;
local function VMCall(ByteString, vmenv, ...)
	local FlatIdent_76979 = 0;
	local DIP;
	local repeatNext;
	local gBit;
	local gBits8;
	local gBits16;
	local gBits32;
	local gFloat;
	local gString;
	local gInt;
	local _R;
	local Deserialize;
	local Wrap;
	while true do
		if (FlatIdent_76979 == 5) then
			gInt = gBits32;
			_R = nil;
			function _R(...)
				return {...}, Select("#", ...);
			end
			FlatIdent_76979 = 6;
		end
		if (FlatIdent_76979 == 2) then
			function gBits8()
				local a = Byte(ByteString, DIP, DIP);
				DIP = DIP + 1;
				return a;
			end
			gBits16 = nil;
			function gBits16()
				local a, b = Byte(ByteString, DIP, DIP + 2);
				DIP = DIP + 2;
				return (b * 256) + a;
			end
			FlatIdent_76979 = 3;
		end
		if (FlatIdent_76979 == 4) then
			function gFloat()
				local Left = gBits32();
				local Right = gBits32();
				local IsNormal = 1;
				local Mantissa = (gBit(Right, 1, 20) * (2 ^ 32)) + Left;
				local Exponent = gBit(Right, 21, 31);
				local Sign = ((gBit(Right, 32) == 1) and -1) or 1;
				if (Exponent == 0) then
					if (Mantissa == 0) then
						return Sign * 0;
					else
						Exponent = 1;
						IsNormal = 0;
					end
				elseif (Exponent == 2047) then
					return ((Mantissa == 0) and (Sign * (1 / 0))) or (Sign * NaN);
				end
				return LDExp(Sign, Exponent - 1023) * (IsNormal + (Mantissa / (2 ^ 52)));
			end
			gString = nil;
			function gString(Len)
				local Str;
				if not Len then
					Len = gBits32();
					if (Len == 0) then
						return "";
					end
				end
				Str = Sub(ByteString, DIP, (DIP + Len) - 1);
				DIP = DIP + Len;
				local FStr = {};
				for Idx = 1, #Str do
					FStr[Idx] = Char(Byte(Sub(Str, Idx, Idx)));
				end
				return Concat(FStr);
			end
			FlatIdent_76979 = 5;
		end
		if (FlatIdent_76979 == 6) then
			Deserialize = nil;
			function Deserialize()
				local FlatIdent_31A5A = 0;
				local Instrs;
				local Functions;
				local Lines;
				local Chunk;
				local ConstCount;
				local Consts;
				while true do
					if (FlatIdent_31A5A == 2) then
						for Idx = 1, ConstCount do
							local Type = gBits8();
							local Cons;
							if (Type == 1) then
								Cons = gBits8() ~= 0;
							elseif (Type == 2) then
								Cons = gFloat();
							elseif (Type == 3) then
								Cons = gString();
							end
							Consts[Idx] = Cons;
						end
						Chunk[3] = gBits8();
						for Idx = 1, gBits32() do
							local Descriptor = gBits8();
							if (gBit(Descriptor, 1, 1) == 0) then
								local Type = gBit(Descriptor, 2, 3);
								local Mask = gBit(Descriptor, 4, 6);
								local Inst = {gBits16(),gBits16(),nil,nil};
								if (Type == 0) then
									Inst[3] = gBits16();
									Inst[4] = gBits16();
								elseif (Type == 1) then
									Inst[3] = gBits32();
								elseif (Type == 2) then
									Inst[3] = gBits32() - (2 ^ 16);
								elseif (Type == 3) then
									Inst[3] = gBits32() - (2 ^ 16);
									Inst[4] = gBits16();
								end
								if (gBit(Mask, 1, 1) == 1) then
									Inst[2] = Consts[Inst[2]];
								end
								if (gBit(Mask, 2, 2) == 1) then
									Inst[3] = Consts[Inst[3]];
								end
								if (gBit(Mask, 3, 3) == 1) then
									Inst[4] = Consts[Inst[4]];
								end
								Instrs[Idx] = Inst;
							end
						end
						FlatIdent_31A5A = 3;
					end
					if (3 == FlatIdent_31A5A) then
						for Idx = 1, gBits32() do
							Functions[Idx - 1] = Deserialize();
						end
						return Chunk;
					end
					if (FlatIdent_31A5A == 1) then
						Chunk = {Instrs,Functions,nil,Lines};
						ConstCount = gBits32();
						Consts = {};
						FlatIdent_31A5A = 2;
					end
					if (FlatIdent_31A5A == 0) then
						Instrs = {};
						Functions = {};
						Lines = {};
						FlatIdent_31A5A = 1;
					end
				end
			end
			Wrap = nil;
			FlatIdent_76979 = 7;
		end
		if (FlatIdent_76979 == 0) then
			DIP = 1;
			repeatNext = nil;
			ByteString = Subg(Sub(ByteString, 5), "..", function(byte)
				if (Byte(byte, 2) == 79) then
					local FlatIdent_60EA1 = 0;
					while true do
						if (FlatIdent_60EA1 == 0) then
							repeatNext = StrToNumber(Sub(byte, 1, 1));
							return "";
						end
					end
				else
					local a = Char(StrToNumber(byte, 16));
					if repeatNext then
						local b = Rep(a, repeatNext);
						repeatNext = nil;
						return b;
					else
						return a;
					end
				end
			end);
			FlatIdent_76979 = 1;
		end
		if (FlatIdent_76979 == 3) then
			gBits32 = nil;
			function gBits32()
				local a, b, c, d = Byte(ByteString, DIP, DIP + 3);
				DIP = DIP + 4;
				return (d * 16777216) + (c * 65536) + (b * 256) + a;
			end
			gFloat = nil;
			FlatIdent_76979 = 4;
		end
		if (FlatIdent_76979 == 7) then
			function Wrap(Chunk, Upvalues, Env)
				local FlatIdent_61B23 = 0;
				local Instr;
				local Proto;
				local Params;
				while true do
					if (FlatIdent_61B23 == 0) then
						Instr = Chunk[1];
						Proto = Chunk[2];
						FlatIdent_61B23 = 1;
					end
					if (FlatIdent_61B23 == 1) then
						Params = Chunk[3];
						return function(...)
							local Instr = Instr;
							local Proto = Proto;
							local Params = Params;
							local _R = _R;
							local VIP = 1;
							local Top = -1;
							local Vararg = {};
							local Args = {...};
							local PCount = Select("#", ...) - 1;
							local Lupvals = {};
							local Stk = {};
							for Idx = 0, PCount do
								if (Idx >= Params) then
									Vararg[Idx - Params] = Args[Idx + 1];
								else
									Stk[Idx] = Args[Idx + 1];
								end
							end
							local Varargsz = (PCount - Params) + 1;
							local Inst;
							local Enum;
							while true do
								local FlatIdent_946F = 0;
								while true do
									if (FlatIdent_946F == 0) then
										Inst = Instr[VIP];
										Enum = Inst[1];
										FlatIdent_946F = 1;
									end
									if (FlatIdent_946F == 1) then
										if (Enum <= 106) then
											if (Enum <= 52) then
												if (Enum <= 25) then
													if (Enum <= 12) then
														if (Enum <= 5) then
															if (Enum <= 2) then
																if (Enum <= 0) then
																	local A;
																	Stk[Inst[2]] = Stk[Inst[3]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	A = Inst[2];
																	Stk[A](Unpack(Stk, A + 1, Inst[3]));
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Env[Inst[3]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	A = Inst[2];
																	Stk[A](Stk[A + 1]);
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																elseif (Enum > 1) then
																	local A;
																	Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	A = Inst[2];
																	Stk[A] = Stk[A](Stk[A + 1]);
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]]();
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	for Idx = Inst[2], Inst[3] do
																		Stk[Idx] = nil;
																	end
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	VIP = Inst[3];
																else
																	local A;
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	A = Inst[2];
																	Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																end
															elseif (Enum <= 3) then
																local A;
																Stk[Inst[2]] = Env[Inst[3]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																A = Inst[2];
																Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																VIP = Inst[3];
															elseif (Enum > 4) then
																if (Inst[2] == Stk[Inst[4]]) then
																	VIP = VIP + 1;
																else
																	VIP = Inst[3];
																end
															else
																local A;
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																A = Inst[2];
																Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Env[Inst[3]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
															end
														elseif (Enum <= 8) then
															if (Enum <= 6) then
																local FlatIdent_49AED = 0;
																local A;
																while true do
																	if (FlatIdent_49AED == 5) then
																		Inst = Instr[VIP];
																		Stk[Inst[2]] = Inst[3];
																		break;
																	end
																	if (FlatIdent_49AED == 2) then
																		Stk[A](Unpack(Stk, A + 1, Inst[3]));
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		Stk[Inst[2]] = Env[Inst[3]];
																		FlatIdent_49AED = 3;
																	end
																	if (FlatIdent_49AED == 3) then
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		Stk[Inst[2]] = Inst[3];
																		VIP = VIP + 1;
																		FlatIdent_49AED = 4;
																	end
																	if (FlatIdent_49AED == 4) then
																		Inst = Instr[VIP];
																		A = Inst[2];
																		Stk[A](Stk[A + 1]);
																		VIP = VIP + 1;
																		FlatIdent_49AED = 5;
																	end
																	if (FlatIdent_49AED == 0) then
																		A = nil;
																		Stk[Inst[2]] = Stk[Inst[3]];
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		FlatIdent_49AED = 1;
																	end
																	if (FlatIdent_49AED == 1) then
																		Stk[Inst[2]] = Inst[3];
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		A = Inst[2];
																		FlatIdent_49AED = 2;
																	end
																end
															elseif (Enum > 7) then
																local FlatIdent_5BA5E = 0;
																local A;
																while true do
																	if (FlatIdent_5BA5E == 2) then
																		Inst = Instr[VIP];
																		A = Inst[2];
																		Stk[A] = Stk[A](Stk[A + 1]);
																		FlatIdent_5BA5E = 3;
																	end
																	if (FlatIdent_5BA5E == 4) then
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		for Idx = Inst[2], Inst[3] do
																			Stk[Idx] = nil;
																		end
																		FlatIdent_5BA5E = 5;
																	end
																	if (FlatIdent_5BA5E == 0) then
																		A = nil;
																		Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																		VIP = VIP + 1;
																		FlatIdent_5BA5E = 1;
																	end
																	if (FlatIdent_5BA5E == 1) then
																		Inst = Instr[VIP];
																		Stk[Inst[2]] = Stk[Inst[3]];
																		VIP = VIP + 1;
																		FlatIdent_5BA5E = 2;
																	end
																	if (FlatIdent_5BA5E == 3) then
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		Stk[Inst[2]]();
																		FlatIdent_5BA5E = 4;
																	end
																	if (FlatIdent_5BA5E == 5) then
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		Stk[Inst[2]] = Inst[3];
																		break;
																	end
																end
															else
																local FlatIdent_189F0 = 0;
																local A;
																while true do
																	if (4 == FlatIdent_189F0) then
																		Inst = Instr[VIP];
																		Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		FlatIdent_189F0 = 5;
																	end
																	if (FlatIdent_189F0 == 1) then
																		Stk[Inst[2]] = Inst[3];
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		Stk[Inst[2]] = Inst[3];
																		FlatIdent_189F0 = 2;
																	end
																	if (3 == FlatIdent_189F0) then
																		Inst = Instr[VIP];
																		A = Inst[2];
																		Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																		VIP = VIP + 1;
																		FlatIdent_189F0 = 4;
																	end
																	if (FlatIdent_189F0 == 2) then
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		Stk[Inst[2]] = Inst[3];
																		VIP = VIP + 1;
																		FlatIdent_189F0 = 3;
																	end
																	if (FlatIdent_189F0 == 5) then
																		Stk[Inst[2]][Inst[3]] = Inst[4];
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		Stk[Inst[2]] = Inst[3];
																		FlatIdent_189F0 = 6;
																	end
																	if (FlatIdent_189F0 == 6) then
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		VIP = Inst[3];
																		break;
																	end
																	if (FlatIdent_189F0 == 0) then
																		A = nil;
																		Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		FlatIdent_189F0 = 1;
																	end
																end
															end
														elseif (Enum <= 10) then
															if (Enum > 9) then
																local FlatIdent_5477B = 0;
																local A;
																while true do
																	if (FlatIdent_5477B == 6) then
																		Stk[A] = Stk[A](Stk[A + 1]);
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		Stk[Inst[2]] = Stk[Inst[3]];
																		FlatIdent_5477B = 7;
																	end
																	if (FlatIdent_5477B == 2) then
																		Stk[A] = Stk[A](Stk[A + 1]);
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		Stk[Inst[2]] = Stk[Inst[3]];
																		FlatIdent_5477B = 3;
																	end
																	if (FlatIdent_5477B == 1) then
																		Stk[Inst[2]] = Inst[3];
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		A = Inst[2];
																		FlatIdent_5477B = 2;
																	end
																	if (5 == FlatIdent_5477B) then
																		Stk[Inst[2]] = Inst[3];
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		A = Inst[2];
																		FlatIdent_5477B = 6;
																	end
																	if (FlatIdent_5477B == 0) then
																		A = nil;
																		Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		FlatIdent_5477B = 1;
																	end
																	if (FlatIdent_5477B == 4) then
																		Inst = Instr[VIP];
																		Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		FlatIdent_5477B = 5;
																	end
																	if (7 == FlatIdent_5477B) then
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		Stk[Inst[2]] = Inst[3];
																		break;
																	end
																	if (FlatIdent_5477B == 3) then
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		Stk[Inst[2]] = Env[Inst[3]];
																		VIP = VIP + 1;
																		FlatIdent_5477B = 4;
																	end
																end
															else
																local FlatIdent_61800 = 0;
																local A;
																while true do
																	if (1 == FlatIdent_61800) then
																		Stk[Inst[2]] = Inst[3];
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		Stk[Inst[2]] = Inst[3];
																		FlatIdent_61800 = 2;
																	end
																	if (FlatIdent_61800 == 4) then
																		Inst = Instr[VIP];
																		Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																		break;
																	end
																	if (FlatIdent_61800 == 0) then
																		A = nil;
																		Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		FlatIdent_61800 = 1;
																	end
																	if (FlatIdent_61800 == 2) then
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		Stk[Inst[2]] = Inst[3];
																		VIP = VIP + 1;
																		FlatIdent_61800 = 3;
																	end
																	if (FlatIdent_61800 == 3) then
																		Inst = Instr[VIP];
																		A = Inst[2];
																		Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																		VIP = VIP + 1;
																		FlatIdent_61800 = 4;
																	end
																end
															end
														elseif (Enum == 11) then
															local Edx;
															local Results, Limit;
															local B;
															local A;
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A](Stk[A + 1]);
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															B = Stk[Inst[3]];
															Stk[A + 1] = B;
															Stk[A] = B[Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Results, Limit = _R(Stk[A](Unpack(Stk, A + 1, Inst[3])));
															Top = (Limit + A) - 1;
															Edx = 0;
															for Idx = A, Top do
																local FlatIdent_32B97 = 0;
																while true do
																	if (FlatIdent_32B97 == 0) then
																		Edx = Edx + 1;
																		Stk[Idx] = Results[Edx];
																		break;
																	end
																end
															end
														else
															local FlatIdent_1FC27 = 0;
															local B;
															local A;
															while true do
																if (FlatIdent_1FC27 == 4) then
																	Stk[Inst[2]] = Env[Inst[3]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	FlatIdent_1FC27 = 5;
																end
																if (FlatIdent_1FC27 == 0) then
																	B = nil;
																	A = nil;
																	Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																	FlatIdent_1FC27 = 1;
																end
																if (FlatIdent_1FC27 == 1) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	A = Inst[2];
																	B = Stk[Inst[3]];
																	Stk[A + 1] = B;
																	Stk[A] = B[Inst[4]];
																	FlatIdent_1FC27 = 2;
																end
																if (FlatIdent_1FC27 == 3) then
																	Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	FlatIdent_1FC27 = 4;
																end
																if (FlatIdent_1FC27 == 2) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	A = Inst[2];
																	FlatIdent_1FC27 = 3;
																end
																if (FlatIdent_1FC27 == 5) then
																	Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																	break;
																end
															end
														end
													elseif (Enum <= 18) then
														if (Enum <= 15) then
															if (Enum <= 13) then
																local A;
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																A = Inst[2];
																Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Env[Inst[3]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
															elseif (Enum == 14) then
																local A;
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																A = Inst[2];
																Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
															else
																for Idx = Inst[2], Inst[3] do
																	Stk[Idx] = nil;
																end
															end
														elseif (Enum <= 16) then
															local FlatIdent_521D6 = 0;
															local A;
															while true do
																if (FlatIdent_521D6 == 6) then
																	Stk[A](Unpack(Stk, A + 1, Inst[3]));
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	FlatIdent_521D6 = 7;
																end
																if (FlatIdent_521D6 == 7) then
																	Stk[Inst[2]] = Inst[3];
																	break;
																end
																if (FlatIdent_521D6 == 0) then
																	A = nil;
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	FlatIdent_521D6 = 1;
																end
																if (FlatIdent_521D6 == 5) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	A = Inst[2];
																	FlatIdent_521D6 = 6;
																end
																if (FlatIdent_521D6 == 4) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	FlatIdent_521D6 = 5;
																end
																if (FlatIdent_521D6 == 1) then
																	Inst = Instr[VIP];
																	A = Inst[2];
																	Stk[A](Stk[A + 1]);
																	FlatIdent_521D6 = 2;
																end
																if (FlatIdent_521D6 == 3) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]];
																	FlatIdent_521D6 = 4;
																end
																if (FlatIdent_521D6 == 2) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]];
																	FlatIdent_521D6 = 3;
																end
															end
														elseif (Enum == 17) then
															local FlatIdent_53124 = 0;
															local B;
															local A;
															while true do
																if (FlatIdent_53124 == 0) then
																	B = nil;
																	A = nil;
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	A = Inst[2];
																	FlatIdent_53124 = 1;
																end
																if (FlatIdent_53124 == 2) then
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	A = Inst[2];
																	Stk[A](Stk[A + 1]);
																	VIP = VIP + 1;
																	FlatIdent_53124 = 3;
																end
																if (FlatIdent_53124 == 1) then
																	Stk[A](Stk[A + 1]);
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Env[Inst[3]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	FlatIdent_53124 = 2;
																end
																if (FlatIdent_53124 == 5) then
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	break;
																end
																if (4 == FlatIdent_53124) then
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Env[Inst[3]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																	VIP = VIP + 1;
																	FlatIdent_53124 = 5;
																end
																if (3 == FlatIdent_53124) then
																	Inst = Instr[VIP];
																	A = Inst[2];
																	B = Stk[Inst[3]];
																	Stk[A + 1] = B;
																	Stk[A] = B[Inst[4]];
																	VIP = VIP + 1;
																	FlatIdent_53124 = 4;
																end
															end
														else
															local A;
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Inst[4];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
														end
													elseif (Enum <= 21) then
														if (Enum <= 19) then
															local A;
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Inst[4];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															VIP = Inst[3];
														elseif (Enum > 20) then
															local A;
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Inst[4];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Inst[4];
														else
															local A;
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Upvalues[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															if (Stk[Inst[2]] == Inst[4]) then
																VIP = VIP + 1;
															else
																VIP = Inst[3];
															end
														end
													elseif (Enum <= 23) then
														if (Enum > 22) then
															local A;
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Stk[A + 1]);
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Stk[A + 1]);
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
														else
															local A;
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A](Stk[A + 1]);
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
														end
													elseif (Enum == 24) then
														local A = Inst[2];
														local B = Stk[Inst[3]];
														Stk[A + 1] = B;
														Stk[A] = B[Inst[4]];
													else
														local A;
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
													end
												elseif (Enum <= 38) then
													if (Enum <= 31) then
														if (Enum <= 28) then
															if (Enum <= 26) then
																local A;
																Stk[Inst[2]] = Env[Inst[3]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																A = Inst[2];
																Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
															elseif (Enum == 27) then
																local FlatIdent_8638E = 0;
																while true do
																	if (FlatIdent_8638E == 0) then
																		Stk[Inst[2]] = Env[Inst[3]];
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		FlatIdent_8638E = 1;
																	end
																	if (FlatIdent_8638E == 3) then
																		Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		FlatIdent_8638E = 4;
																	end
																	if (FlatIdent_8638E == 4) then
																		Stk[Inst[2]] = Inst[3];
																		break;
																	end
																	if (FlatIdent_8638E == 1) then
																		Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		FlatIdent_8638E = 2;
																	end
																	if (FlatIdent_8638E == 2) then
																		Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		FlatIdent_8638E = 3;
																	end
																end
															else
																local FlatIdent_6E549 = 0;
																local A;
																while true do
																	if (2 == FlatIdent_6E549) then
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		Stk[Inst[2]] = Inst[3];
																		VIP = VIP + 1;
																		FlatIdent_6E549 = 3;
																	end
																	if (FlatIdent_6E549 == 6) then
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		Stk[Inst[2]] = Inst[3];
																		VIP = VIP + 1;
																		FlatIdent_6E549 = 7;
																	end
																	if (FlatIdent_6E549 == 7) then
																		Inst = Instr[VIP];
																		VIP = Inst[3];
																		break;
																	end
																	if (FlatIdent_6E549 == 5) then
																		Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																		FlatIdent_6E549 = 6;
																	end
																	if (FlatIdent_6E549 == 3) then
																		Inst = Instr[VIP];
																		Stk[Inst[2]] = Inst[3];
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		FlatIdent_6E549 = 4;
																	end
																	if (FlatIdent_6E549 == 1) then
																		Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		Stk[Inst[2]] = Inst[3];
																		FlatIdent_6E549 = 2;
																	end
																	if (4 == FlatIdent_6E549) then
																		Stk[Inst[2]] = Inst[3];
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		A = Inst[2];
																		FlatIdent_6E549 = 5;
																	end
																	if (FlatIdent_6E549 == 0) then
																		A = nil;
																		Stk[Inst[2]] = Env[Inst[3]];
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		FlatIdent_6E549 = 1;
																	end
																end
															end
														elseif (Enum <= 29) then
															local A;
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A](Stk[A + 1]);
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A](Unpack(Stk, A + 1, Inst[3]));
														elseif (Enum == 30) then
															local FlatIdent_8BA1E = 0;
															while true do
																if (FlatIdent_8BA1E == 0) then
																	Stk[Inst[2]] = Env[Inst[3]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																	FlatIdent_8BA1E = 1;
																end
																if (FlatIdent_8BA1E == 3) then
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	VIP = Inst[3];
																	break;
																end
																if (FlatIdent_8BA1E == 1) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																	VIP = VIP + 1;
																	FlatIdent_8BA1E = 2;
																end
																if (FlatIdent_8BA1E == 2) then
																	Inst = Instr[VIP];
																	Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	FlatIdent_8BA1E = 3;
																end
															end
														else
															local A;
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Stk[A + 1]);
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Stk[A + 1]);
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
														end
													elseif (Enum <= 34) then
														if (Enum <= 32) then
															local A;
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A](Stk[A + 1]);
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A](Unpack(Stk, A + 1, Inst[3]));
														elseif (Enum > 33) then
															local A;
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A](Stk[A + 1]);
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
														else
															local FlatIdent_6DFD9 = 0;
															local B;
															local K;
															while true do
																if (FlatIdent_6DFD9 == 1) then
																	for Idx = B + 1, Inst[4] do
																		K = K .. Stk[Idx];
																	end
																	Stk[Inst[2]] = K;
																	break;
																end
																if (FlatIdent_6DFD9 == 0) then
																	B = Inst[3];
																	K = Stk[B];
																	FlatIdent_6DFD9 = 1;
																end
															end
														end
													elseif (Enum <= 36) then
														if (Enum == 35) then
															local A;
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Stk[A + 1]);
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
														else
															local FlatIdent_56F59 = 0;
															local A;
															while true do
																if (FlatIdent_56F59 == 3) then
																	Inst = Instr[VIP];
																	A = Inst[2];
																	Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																	FlatIdent_56F59 = 4;
																end
																if (FlatIdent_56F59 == 2) then
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	FlatIdent_56F59 = 3;
																end
																if (FlatIdent_56F59 == 1) then
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	FlatIdent_56F59 = 2;
																end
																if (FlatIdent_56F59 == 4) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																	break;
																end
																if (FlatIdent_56F59 == 0) then
																	A = nil;
																	Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																	VIP = VIP + 1;
																	FlatIdent_56F59 = 1;
																end
															end
														end
													elseif (Enum > 37) then
														local A;
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Stk[A + 1]);
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]]();
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
													else
														local FlatIdent_1D701 = 0;
														local A;
														while true do
															if (FlatIdent_1D701 == 4) then
																Inst = Instr[VIP];
																A = Inst[2];
																Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																FlatIdent_1D701 = 5;
															end
															if (FlatIdent_1D701 == 3) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_1D701 = 4;
															end
															if (FlatIdent_1D701 == 1) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_1D701 = 2;
															end
															if (5 == FlatIdent_1D701) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																FlatIdent_1D701 = 6;
															end
															if (FlatIdent_1D701 == 2) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_1D701 = 3;
															end
															if (FlatIdent_1D701 == 0) then
																A = nil;
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																FlatIdent_1D701 = 1;
															end
															if (FlatIdent_1D701 == 7) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																break;
															end
															if (FlatIdent_1D701 == 6) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Inst[4];
																FlatIdent_1D701 = 7;
															end
														end
													end
												elseif (Enum <= 45) then
													if (Enum <= 41) then
														if (Enum <= 39) then
															local A;
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
														elseif (Enum == 40) then
															local FlatIdent_71493 = 0;
															local A;
															while true do
																if (FlatIdent_71493 == 3) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	A = Inst[2];
																	Stk[A] = Stk[A](Stk[A + 1]);
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	FlatIdent_71493 = 4;
																end
																if (FlatIdent_71493 == 0) then
																	A = nil;
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	A = Inst[2];
																	Stk[A] = Stk[A](Stk[A + 1]);
																	FlatIdent_71493 = 1;
																end
																if (FlatIdent_71493 == 4) then
																	Stk[Inst[2]] = Stk[Inst[3]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Env[Inst[3]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	FlatIdent_71493 = 5;
																end
																if (FlatIdent_71493 == 5) then
																	Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																	break;
																end
																if (FlatIdent_71493 == 2) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	FlatIdent_71493 = 3;
																end
																if (FlatIdent_71493 == 1) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Env[Inst[3]];
																	FlatIdent_71493 = 2;
																end
															end
														else
															local A;
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
														end
													elseif (Enum <= 43) then
														if (Enum == 42) then
															local A;
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Inst[4];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
														else
															local FlatIdent_3501F = 0;
															local A;
															while true do
																if (FlatIdent_3501F == 0) then
																	A = nil;
																	Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																	VIP = VIP + 1;
																	FlatIdent_3501F = 1;
																end
																if (FlatIdent_3501F == 7) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	break;
																end
																if (1 == FlatIdent_3501F) then
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	FlatIdent_3501F = 2;
																end
																if (2 == FlatIdent_3501F) then
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	FlatIdent_3501F = 3;
																end
																if (FlatIdent_3501F == 4) then
																	Inst = Instr[VIP];
																	A = Inst[2];
																	Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																	FlatIdent_3501F = 5;
																end
																if (FlatIdent_3501F == 3) then
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	FlatIdent_3501F = 4;
																end
																if (6 == FlatIdent_3501F) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]][Inst[3]] = Inst[4];
																	FlatIdent_3501F = 7;
																end
																if (5 == FlatIdent_3501F) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																	FlatIdent_3501F = 6;
																end
															end
														end
													elseif (Enum == 44) then
														local FlatIdent_7C57C = 0;
														local A;
														while true do
															if (FlatIdent_7C57C == 0) then
																A = nil;
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																FlatIdent_7C57C = 1;
															end
															if (FlatIdent_7C57C == 2) then
																Stk[Inst[2]] = Env[Inst[3]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																FlatIdent_7C57C = 3;
															end
															if (FlatIdent_7C57C == 3) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																A = Inst[2];
																Stk[A](Stk[A + 1]);
																FlatIdent_7C57C = 4;
															end
															if (FlatIdent_7C57C == 4) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																break;
															end
															if (FlatIdent_7C57C == 1) then
																A = Inst[2];
																Stk[A](Stk[A + 1]);
																VIP = VIP + 1;
																Inst = Instr[VIP];
																FlatIdent_7C57C = 2;
															end
														end
													else
														local B;
														local A;
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														B = Stk[Inst[3]];
														Stk[A + 1] = B;
														Stk[A] = B[Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														VIP = Inst[3];
													end
												elseif (Enum <= 48) then
													if (Enum <= 46) then
														local A;
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A](Stk[A + 1]);
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A](Stk[A + 1]);
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
													elseif (Enum > 47) then
														local A;
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A](Stk[A + 1]);
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
													else
														local A;
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
													end
												elseif (Enum <= 50) then
													if (Enum == 49) then
														local FlatIdent_559FF = 0;
														local A;
														while true do
															if (FlatIdent_559FF == 5) then
																Inst = Instr[VIP];
																A = Inst[2];
																Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																FlatIdent_559FF = 6;
															end
															if (7 == FlatIdent_559FF) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Inst[4];
																FlatIdent_559FF = 8;
															end
															if (FlatIdent_559FF == 2) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_559FF = 3;
															end
															if (FlatIdent_559FF == 0) then
																A = nil;
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																FlatIdent_559FF = 1;
															end
															if (FlatIdent_559FF == 4) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_559FF = 5;
															end
															if (1 == FlatIdent_559FF) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_559FF = 2;
															end
															if (FlatIdent_559FF == 8) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																break;
															end
															if (FlatIdent_559FF == 3) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_559FF = 4;
															end
															if (FlatIdent_559FF == 6) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																FlatIdent_559FF = 7;
															end
														end
													else
														local A;
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
													end
												elseif (Enum > 51) then
													if Stk[Inst[2]] then
														VIP = VIP + 1;
													else
														VIP = Inst[3];
													end
												else
													local A;
													Stk[Inst[2]][Inst[3]] = Inst[4];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Env[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Env[Inst[3]];
												end
											elseif (Enum <= 79) then
												if (Enum <= 65) then
													if (Enum <= 58) then
														if (Enum <= 55) then
															if (Enum <= 53) then
																local A = Inst[2];
																local Results = {Stk[A](Stk[A + 1])};
																local Edx = 0;
																for Idx = A, Inst[4] do
																	Edx = Edx + 1;
																	Stk[Idx] = Results[Edx];
																end
															elseif (Enum == 54) then
																local A;
																Stk[Inst[2]] = Env[Inst[3]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																A = Inst[2];
																Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
															else
																local A;
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																A = Inst[2];
																Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Inst[4];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																VIP = Inst[3];
															end
														elseif (Enum <= 56) then
															local FlatIdent_89126 = 0;
															local A;
															local Step;
															local Index;
															while true do
																if (FlatIdent_89126 == 2) then
																	if (Step > 0) then
																		if (Index <= Stk[A + 1]) then
																			VIP = Inst[3];
																			Stk[A + 3] = Index;
																		end
																	elseif (Index >= Stk[A + 1]) then
																		local FlatIdent_86634 = 0;
																		while true do
																			if (FlatIdent_86634 == 0) then
																				VIP = Inst[3];
																				Stk[A + 3] = Index;
																				break;
																			end
																		end
																	end
																	break;
																end
																if (FlatIdent_89126 == 1) then
																	Index = Stk[A] + Step;
																	Stk[A] = Index;
																	FlatIdent_89126 = 2;
																end
																if (FlatIdent_89126 == 0) then
																	A = Inst[2];
																	Step = Stk[A + 2];
																	FlatIdent_89126 = 1;
																end
															end
														elseif (Enum > 57) then
															local FlatIdent_92569 = 0;
															local A;
															while true do
																if (FlatIdent_92569 == 1) then
																	A = Inst[2];
																	Stk[A](Stk[A + 1]);
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	FlatIdent_92569 = 2;
																end
																if (FlatIdent_92569 == 3) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	FlatIdent_92569 = 4;
																end
																if (FlatIdent_92569 == 5) then
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	break;
																end
																if (2 == FlatIdent_92569) then
																	Stk[Inst[2]] = Stk[Inst[3]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]];
																	FlatIdent_92569 = 3;
																end
																if (FlatIdent_92569 == 4) then
																	Inst = Instr[VIP];
																	A = Inst[2];
																	Stk[A](Unpack(Stk, A + 1, Inst[3]));
																	VIP = VIP + 1;
																	FlatIdent_92569 = 5;
																end
																if (FlatIdent_92569 == 0) then
																	A = nil;
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	FlatIdent_92569 = 1;
																end
															end
														else
															local A;
															Stk[Inst[2]] = Upvalues[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]] - Stk[Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Upvalues[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Upvalues[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]] + Stk[Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Upvalues[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Upvalues[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]] + Stk[Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															VIP = Inst[3];
														end
													elseif (Enum <= 61) then
														if (Enum <= 59) then
															local A;
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A](Stk[A + 1]);
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Stk[A + 1]);
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
														elseif (Enum == 60) then
															local A;
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Inst[4];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
														else
															local A;
															A = Inst[2];
															Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A](Stk[A + 1]);
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
														end
													elseif (Enum <= 63) then
														if (Enum == 62) then
															local A;
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
														else
															local Edx;
															local Results, Limit;
															local B;
															local A;
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A](Stk[A + 1]);
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															B = Stk[Inst[3]];
															Stk[A + 1] = B;
															Stk[A] = B[Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Results, Limit = _R(Stk[A](Unpack(Stk, A + 1, Inst[3])));
															Top = (Limit + A) - 1;
															Edx = 0;
															for Idx = A, Top do
																local FlatIdent_19FC0 = 0;
																while true do
																	if (0 == FlatIdent_19FC0) then
																		Edx = Edx + 1;
																		Stk[Idx] = Results[Edx];
																		break;
																	end
																end
															end
														end
													elseif (Enum == 64) then
														local A;
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
													else
														local A;
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
													end
												elseif (Enum <= 72) then
													if (Enum <= 68) then
														if (Enum <= 66) then
															local Edx;
															local Results, Limit;
															local A;
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Results, Limit = _R(Stk[A](Unpack(Stk, A + 1, Inst[3])));
															Top = (Limit + A) - 1;
															Edx = 0;
															for Idx = A, Top do
																local FlatIdent_16207 = 0;
																while true do
																	if (FlatIdent_16207 == 0) then
																		Edx = Edx + 1;
																		Stk[Idx] = Results[Edx];
																		break;
																	end
																end
															end
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A](Unpack(Stk, A + 1, Top));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]];
														elseif (Enum > 67) then
															local A;
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
														else
															local A = Inst[2];
															local Cls = {};
															for Idx = 1, #Lupvals do
																local List = Lupvals[Idx];
																for Idz = 0, #List do
																	local FlatIdent_59C45 = 0;
																	local Upv;
																	local NStk;
																	local DIP;
																	while true do
																		if (FlatIdent_59C45 == 1) then
																			DIP = Upv[2];
																			if ((NStk == Stk) and (DIP >= A)) then
																				local FlatIdent_2D7B8 = 0;
																				while true do
																					if (0 == FlatIdent_2D7B8) then
																						Cls[DIP] = NStk[DIP];
																						Upv[1] = Cls;
																						break;
																					end
																				end
																			end
																			break;
																		end
																		if (FlatIdent_59C45 == 0) then
																			Upv = List[Idz];
																			NStk = Upv[1];
																			FlatIdent_59C45 = 1;
																		end
																	end
																end
															end
														end
													elseif (Enum <= 70) then
														if (Enum == 69) then
															local FlatIdent_58A9D = 0;
															local A;
															while true do
																if (2 == FlatIdent_58A9D) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	FlatIdent_58A9D = 3;
																end
																if (FlatIdent_58A9D == 1) then
																	Stk[Inst[2]] = Env[Inst[3]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																	FlatIdent_58A9D = 2;
																end
																if (FlatIdent_58A9D == 5) then
																	Stk[Inst[2]] = Inst[3];
																	break;
																end
																if (FlatIdent_58A9D == 4) then
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	FlatIdent_58A9D = 5;
																end
																if (0 == FlatIdent_58A9D) then
																	A = nil;
																	Stk[Inst[2]] = Stk[Inst[3]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	FlatIdent_58A9D = 1;
																end
																if (FlatIdent_58A9D == 3) then
																	Inst = Instr[VIP];
																	A = Inst[2];
																	Stk[A] = Stk[A](Stk[A + 1]);
																	VIP = VIP + 1;
																	FlatIdent_58A9D = 4;
																end
															end
														else
															Stk[Inst[2]] = Upvalues[Inst[3]];
														end
													elseif (Enum == 71) then
														Stk[Inst[2]] = Stk[Inst[3]] - Stk[Inst[4]];
													else
														local A;
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A](Stk[A + 1]);
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
													end
												elseif (Enum <= 75) then
													if (Enum <= 73) then
														local FlatIdent_3C1AA = 0;
														local A;
														while true do
															if (FlatIdent_3C1AA == 0) then
																A = nil;
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																FlatIdent_3C1AA = 1;
															end
															if (FlatIdent_3C1AA == 3) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Env[Inst[3]];
																VIP = VIP + 1;
																FlatIdent_3C1AA = 4;
															end
															if (FlatIdent_3C1AA == 4) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																FlatIdent_3C1AA = 5;
															end
															if (FlatIdent_3C1AA == 7) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Env[Inst[3]];
																break;
															end
															if (FlatIdent_3C1AA == 5) then
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																A = Inst[2];
																FlatIdent_3C1AA = 6;
															end
															if (FlatIdent_3C1AA == 2) then
																Stk[A] = Stk[A](Stk[A + 1]);
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Stk[Inst[3]];
																FlatIdent_3C1AA = 3;
															end
															if (FlatIdent_3C1AA == 1) then
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																A = Inst[2];
																FlatIdent_3C1AA = 2;
															end
															if (FlatIdent_3C1AA == 6) then
																Stk[A] = Stk[A](Stk[A + 1]);
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Stk[Inst[3]];
																FlatIdent_3C1AA = 7;
															end
														end
													elseif (Enum == 74) then
														local A;
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
													else
														Stk[Inst[2]][Inst[3]] = Inst[4];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
													end
												elseif (Enum <= 77) then
													if (Enum == 76) then
														Stk[Inst[2]][Inst[3]] = Inst[4];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Inst[4];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
													else
														Stk[Inst[2]] = Inst[3];
													end
												elseif (Enum == 78) then
													local FlatIdent_32708 = 0;
													local A;
													while true do
														if (FlatIdent_32708 == 3) then
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															FlatIdent_32708 = 4;
														end
														if (FlatIdent_32708 == 4) then
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															FlatIdent_32708 = 5;
														end
														if (FlatIdent_32708 == 1) then
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															FlatIdent_32708 = 2;
														end
														if (FlatIdent_32708 == 0) then
															A = nil;
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															FlatIdent_32708 = 1;
														end
														if (FlatIdent_32708 == 7) then
															VIP = VIP + 1;
															Inst = Instr[VIP];
															VIP = Inst[3];
															break;
														end
														if (FlatIdent_32708 == 6) then
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A](Stk[A + 1]);
															FlatIdent_32708 = 7;
														end
														if (FlatIdent_32708 == 5) then
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															FlatIdent_32708 = 6;
														end
														if (FlatIdent_32708 == 2) then
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															FlatIdent_32708 = 3;
														end
													end
												else
													local FlatIdent_2B407 = 0;
													local A;
													while true do
														if (FlatIdent_2B407 == 1) then
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															FlatIdent_2B407 = 2;
														end
														if (FlatIdent_2B407 == 3) then
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															FlatIdent_2B407 = 4;
														end
														if (FlatIdent_2B407 == 5) then
															Stk[Inst[2]][Inst[3]] = Inst[4];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															break;
														end
														if (FlatIdent_2B407 == 2) then
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															FlatIdent_2B407 = 3;
														end
														if (FlatIdent_2B407 == 4) then
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															FlatIdent_2B407 = 5;
														end
														if (FlatIdent_2B407 == 0) then
															A = nil;
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															FlatIdent_2B407 = 1;
														end
													end
												end
											elseif (Enum <= 92) then
												if (Enum <= 85) then
													if (Enum <= 82) then
														if (Enum <= 80) then
															local A;
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
														elseif (Enum > 81) then
															local A;
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Inst[4];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
														else
															local FlatIdent_14A42 = 0;
															local B;
															local A;
															while true do
																if (FlatIdent_14A42 == 1) then
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	FlatIdent_14A42 = 2;
																end
																if (FlatIdent_14A42 == 8) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																	VIP = VIP + 1;
																	FlatIdent_14A42 = 9;
																end
																if (FlatIdent_14A42 == 0) then
																	B = nil;
																	A = nil;
																	Stk[Inst[2]] = Env[Inst[3]];
																	VIP = VIP + 1;
																	FlatIdent_14A42 = 1;
																end
																if (FlatIdent_14A42 == 3) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	A = Inst[2];
																	Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																	FlatIdent_14A42 = 4;
																end
																if (FlatIdent_14A42 == 4) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Env[Inst[3]];
																	VIP = VIP + 1;
																	FlatIdent_14A42 = 5;
																end
																if (FlatIdent_14A42 == 10) then
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	for Idx = Inst[2], Inst[3] do
																		Stk[Idx] = nil;
																	end
																	break;
																end
																if (FlatIdent_14A42 == 7) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	A = Inst[2];
																	Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																	FlatIdent_14A42 = 8;
																end
																if (FlatIdent_14A42 == 9) then
																	Inst = Instr[VIP];
																	for Idx = Inst[2], Inst[3] do
																		Stk[Idx] = nil;
																	end
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	FlatIdent_14A42 = 10;
																end
																if (2 == FlatIdent_14A42) then
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Upvalues[Inst[3]];
																	FlatIdent_14A42 = 3;
																end
																if (FlatIdent_14A42 == 5) then
																	Inst = Instr[VIP];
																	A = Inst[2];
																	B = Stk[Inst[3]];
																	Stk[A + 1] = B;
																	FlatIdent_14A42 = 6;
																end
																if (FlatIdent_14A42 == 6) then
																	Stk[A] = B[Inst[4]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	FlatIdent_14A42 = 7;
																end
															end
														end
													elseif (Enum <= 83) then
														local Edx;
														local Results, Limit;
														local A;
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Results, Limit = _R(Stk[A](Unpack(Stk, A + 1, Inst[3])));
														Top = (Limit + A) - 1;
														Edx = 0;
														for Idx = A, Top do
															local FlatIdent_15C34 = 0;
															while true do
																if (FlatIdent_15C34 == 0) then
																	Edx = Edx + 1;
																	Stk[Idx] = Results[Edx];
																	break;
																end
															end
														end
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A](Unpack(Stk, A + 1, Top));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
													elseif (Enum == 84) then
														local A;
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
													else
														Stk[Inst[2]][Inst[3]] = Inst[4];
													end
												elseif (Enum <= 88) then
													if (Enum <= 86) then
														Stk[Inst[2]] = #Stk[Inst[3]];
													elseif (Enum == 87) then
														local A;
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
													else
														local FlatIdent_D6BD = 0;
														local A;
														while true do
															if (FlatIdent_D6BD == 2) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_D6BD = 3;
															end
															if (FlatIdent_D6BD == 4) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_D6BD = 5;
															end
															if (FlatIdent_D6BD == 8) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																break;
															end
															if (FlatIdent_D6BD == 7) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																FlatIdent_D6BD = 8;
															end
															if (FlatIdent_D6BD == 1) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																FlatIdent_D6BD = 2;
															end
															if (FlatIdent_D6BD == 0) then
																A = nil;
																Stk[Inst[2]] = Env[Inst[3]];
																VIP = VIP + 1;
																FlatIdent_D6BD = 1;
															end
															if (FlatIdent_D6BD == 5) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_D6BD = 6;
															end
															if (FlatIdent_D6BD == 3) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_D6BD = 4;
															end
															if (FlatIdent_D6BD == 6) then
																Inst = Instr[VIP];
																A = Inst[2];
																Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																FlatIdent_D6BD = 7;
															end
														end
													end
												elseif (Enum <= 90) then
													if (Enum == 89) then
														Stk[Inst[2]]();
													else
														local A;
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													end
												elseif (Enum > 91) then
													if (Stk[Inst[2]] == Inst[4]) then
														VIP = VIP + 1;
													else
														VIP = Inst[3];
													end
												else
													local A;
													Stk[Inst[2]] = Env[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
												end
											elseif (Enum <= 99) then
												if (Enum <= 95) then
													if (Enum <= 93) then
														local A;
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A](Stk[A + 1]);
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
													elseif (Enum > 94) then
														local A;
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
													else
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Inst[4];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
													end
												elseif (Enum <= 97) then
													if (Enum > 96) then
														local A;
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A](Stk[A + 1]);
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
													else
														local FlatIdent_5B0A0 = 0;
														local A;
														local Results;
														local Limit;
														local Edx;
														while true do
															if (FlatIdent_5B0A0 == 2) then
																for Idx = A, Top do
																	Edx = Edx + 1;
																	Stk[Idx] = Results[Edx];
																end
																break;
															end
															if (FlatIdent_5B0A0 == 1) then
																Top = (Limit + A) - 1;
																Edx = 0;
																FlatIdent_5B0A0 = 2;
															end
															if (FlatIdent_5B0A0 == 0) then
																A = Inst[2];
																Results, Limit = _R(Stk[A](Unpack(Stk, A + 1, Inst[3])));
																FlatIdent_5B0A0 = 1;
															end
														end
													end
												elseif (Enum == 98) then
													local FlatIdent_74EA4 = 0;
													local A;
													while true do
														if (FlatIdent_74EA4 == 6) then
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Inst[4];
															FlatIdent_74EA4 = 7;
														end
														if (FlatIdent_74EA4 == 5) then
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
															FlatIdent_74EA4 = 6;
														end
														if (FlatIdent_74EA4 == 0) then
															A = nil;
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															FlatIdent_74EA4 = 1;
														end
														if (FlatIdent_74EA4 == 2) then
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															FlatIdent_74EA4 = 3;
														end
														if (FlatIdent_74EA4 == 1) then
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															FlatIdent_74EA4 = 2;
														end
														if (FlatIdent_74EA4 == 3) then
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															FlatIdent_74EA4 = 4;
														end
														if (FlatIdent_74EA4 == 7) then
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															break;
														end
														if (FlatIdent_74EA4 == 4) then
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															FlatIdent_74EA4 = 5;
														end
													end
												else
													local B;
													local A;
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Upvalues[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													B = Stk[Inst[3]];
													Stk[A + 1] = B;
													Stk[A] = B[Inst[4]];
												end
											elseif (Enum <= 102) then
												if (Enum <= 100) then
													local A;
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A](Stk[A + 1]);
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A](Unpack(Stk, A + 1, Inst[3]));
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
												elseif (Enum == 101) then
													local FlatIdent_33B1E = 0;
													local A;
													while true do
														if (2 == FlatIdent_33B1E) then
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															FlatIdent_33B1E = 3;
														end
														if (1 == FlatIdent_33B1E) then
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															FlatIdent_33B1E = 2;
														end
														if (FlatIdent_33B1E == 0) then
															A = nil;
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															FlatIdent_33B1E = 1;
														end
														if (FlatIdent_33B1E == 3) then
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
															FlatIdent_33B1E = 4;
														end
														if (FlatIdent_33B1E == 4) then
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															break;
														end
													end
												else
													local FlatIdent_8F9B8 = 0;
													local A;
													while true do
														if (FlatIdent_8F9B8 == 0) then
															A = Inst[2];
															Stk[A](Stk[A + 1]);
															break;
														end
													end
												end
											elseif (Enum <= 104) then
												if (Enum == 103) then
													if (Stk[Inst[2]] == Stk[Inst[4]]) then
														VIP = VIP + 1;
													else
														VIP = Inst[3];
													end
												else
													local A;
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Upvalues[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
												end
											elseif (Enum > 105) then
												local A;
												Stk[Inst[2]] = Env[Inst[3]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												A = Inst[2];
												Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
											else
												local A;
												Stk[Inst[2]][Inst[3]] = Inst[4];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Env[Inst[3]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												A = Inst[2];
												Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Env[Inst[3]];
											end
										elseif (Enum <= 160) then
											if (Enum <= 133) then
												if (Enum <= 119) then
													if (Enum <= 112) then
														if (Enum <= 109) then
															if (Enum <= 107) then
																local A;
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																A = Inst[2];
																Stk[A] = Stk[A](Stk[A + 1]);
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Stk[Inst[3]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Env[Inst[3]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																A = Inst[2];
																Stk[A] = Stk[A](Stk[A + 1]);
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Stk[Inst[3]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
															elseif (Enum == 108) then
																local FlatIdent_70F77 = 0;
																local A;
																while true do
																	if (FlatIdent_70F77 == 3) then
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		Stk[Inst[2]] = Inst[3];
																		break;
																	end
																	if (2 == FlatIdent_70F77) then
																		Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																		FlatIdent_70F77 = 3;
																	end
																	if (FlatIdent_70F77 == 1) then
																		Stk[Inst[2]] = Inst[3];
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		A = Inst[2];
																		FlatIdent_70F77 = 2;
																	end
																	if (FlatIdent_70F77 == 0) then
																		A = nil;
																		Stk[Inst[2]] = Inst[3];
																		VIP = VIP + 1;
																		Inst = Instr[VIP];
																		FlatIdent_70F77 = 1;
																	end
																end
															else
																local A;
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																A = Inst[2];
																Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Inst[4];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																VIP = Inst[3];
															end
														elseif (Enum <= 110) then
															local A;
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A](Stk[A + 1]);
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
														elseif (Enum > 111) then
															local A;
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Upvalues[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Stk[A + 1]);
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]]();
															VIP = VIP + 1;
															Inst = Instr[VIP];
															do
																return;
															end
														else
															local FlatIdent_72401 = 0;
															local A;
															while true do
																if (FlatIdent_72401 == 3) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	A = Inst[2];
																	FlatIdent_72401 = 4;
																end
																if (FlatIdent_72401 == 5) then
																	Stk[Inst[2]] = Inst[3];
																	break;
																end
																if (FlatIdent_72401 == 0) then
																	A = nil;
																	Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	FlatIdent_72401 = 1;
																end
																if (FlatIdent_72401 == 2) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Env[Inst[3]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																	FlatIdent_72401 = 3;
																end
																if (FlatIdent_72401 == 1) then
																	Inst = Instr[VIP];
																	A = Inst[2];
																	Stk[A] = Stk[A](Stk[A + 1]);
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]];
																	FlatIdent_72401 = 2;
																end
																if (FlatIdent_72401 == 4) then
																	Stk[A] = Stk[A](Stk[A + 1]);
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	FlatIdent_72401 = 5;
																end
															end
														end
													elseif (Enum <= 115) then
														if (Enum <= 113) then
															local FlatIdent_5C540 = 0;
															local Edx;
															local Results;
															local Limit;
															local A;
															while true do
																if (FlatIdent_5C540 == 3) then
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	FlatIdent_5C540 = 4;
																end
																if (FlatIdent_5C540 == 0) then
																	Edx = nil;
																	Results, Limit = nil;
																	A = nil;
																	Stk[Inst[2]] = Env[Inst[3]];
																	VIP = VIP + 1;
																	FlatIdent_5C540 = 1;
																end
																if (FlatIdent_5C540 == 1) then
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	FlatIdent_5C540 = 2;
																end
																if (6 == FlatIdent_5C540) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	FlatIdent_5C540 = 7;
																end
																if (5 == FlatIdent_5C540) then
																	for Idx = A, Top do
																		Edx = Edx + 1;
																		Stk[Idx] = Results[Edx];
																	end
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	A = Inst[2];
																	Stk[A](Unpack(Stk, A + 1, Top));
																	FlatIdent_5C540 = 6;
																end
																if (FlatIdent_5C540 == 2) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	FlatIdent_5C540 = 3;
																end
																if (FlatIdent_5C540 == 4) then
																	Inst = Instr[VIP];
																	A = Inst[2];
																	Results, Limit = _R(Stk[A](Unpack(Stk, A + 1, Inst[3])));
																	Top = (Limit + A) - 1;
																	Edx = 0;
																	FlatIdent_5C540 = 5;
																end
																if (FlatIdent_5C540 == 7) then
																	Stk[Inst[2]] = Stk[Inst[3]];
																	break;
																end
															end
														elseif (Enum > 114) then
															local Edx;
															local Results, Limit;
															local B;
															local A;
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A](Stk[A + 1]);
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															B = Stk[Inst[3]];
															Stk[A + 1] = B;
															Stk[A] = B[Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Results, Limit = _R(Stk[A](Unpack(Stk, A + 1, Inst[3])));
															Top = (Limit + A) - 1;
															Edx = 0;
															for Idx = A, Top do
																Edx = Edx + 1;
																Stk[Idx] = Results[Edx];
															end
														else
															Stk[Inst[2]] = Wrap(Proto[Inst[3]], nil, Env);
														end
													elseif (Enum <= 117) then
														if (Enum > 116) then
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														else
															local A;
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
														end
													elseif (Enum == 118) then
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Inst[4];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														do
															return;
														end
													else
														local FlatIdent_3E39 = 0;
														local A;
														while true do
															if (FlatIdent_3E39 == 2) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_3E39 = 3;
															end
															if (FlatIdent_3E39 == 0) then
																A = nil;
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																FlatIdent_3E39 = 1;
															end
															if (4 == FlatIdent_3E39) then
																Inst = Instr[VIP];
																A = Inst[2];
																Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																FlatIdent_3E39 = 5;
															end
															if (FlatIdent_3E39 == 7) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																FlatIdent_3E39 = 8;
															end
															if (FlatIdent_3E39 == 1) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_3E39 = 2;
															end
															if (FlatIdent_3E39 == 3) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_3E39 = 4;
															end
															if (FlatIdent_3E39 == 6) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Inst[4];
																FlatIdent_3E39 = 7;
															end
															if (FlatIdent_3E39 == 8) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																VIP = Inst[3];
																break;
															end
															if (FlatIdent_3E39 == 5) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																FlatIdent_3E39 = 6;
															end
														end
													end
												elseif (Enum <= 126) then
													if (Enum <= 122) then
														if (Enum <= 120) then
															if not Stk[Inst[2]] then
																VIP = VIP + 1;
															else
																VIP = Inst[3];
															end
														elseif (Enum > 121) then
															Stk[Inst[2]] = {};
														else
															local FlatIdent_1C13F = 0;
															while true do
																if (FlatIdent_1C13F == 2) then
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	FlatIdent_1C13F = 3;
																end
																if (FlatIdent_1C13F == 3) then
																	if (Stk[Inst[2]] ~= Stk[Inst[4]]) then
																		VIP = VIP + 1;
																	else
																		VIP = Inst[3];
																	end
																	break;
																end
																if (FlatIdent_1C13F == 1) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																	VIP = VIP + 1;
																	FlatIdent_1C13F = 2;
																end
																if (FlatIdent_1C13F == 0) then
																	Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Env[Inst[3]];
																	FlatIdent_1C13F = 1;
																end
															end
														end
													elseif (Enum <= 124) then
														if (Enum > 123) then
															local A;
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A](Stk[A + 1]);
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
														else
															local A;
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Stk[A + 1]);
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]]();
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
														end
													elseif (Enum == 125) then
														local A;
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
													else
														local A;
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
													end
												elseif (Enum <= 129) then
													if (Enum <= 127) then
														Upvalues[Inst[3]] = Stk[Inst[2]];
													elseif (Enum == 128) then
														local A;
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A](Stk[A + 1]);
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
													else
														local A;
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
													end
												elseif (Enum <= 131) then
													if (Enum == 130) then
														local A;
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
													else
														local FlatIdent_13AEB = 0;
														local A;
														while true do
															if (FlatIdent_13AEB == 2) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_13AEB = 3;
															end
															if (FlatIdent_13AEB == 5) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																FlatIdent_13AEB = 6;
															end
															if (0 == FlatIdent_13AEB) then
																A = nil;
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_13AEB = 1;
															end
															if (FlatIdent_13AEB == 4) then
																Inst = Instr[VIP];
																A = Inst[2];
																Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																FlatIdent_13AEB = 5;
															end
															if (FlatIdent_13AEB == 6) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																break;
															end
															if (3 == FlatIdent_13AEB) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_13AEB = 4;
															end
															if (FlatIdent_13AEB == 1) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_13AEB = 2;
															end
														end
													end
												elseif (Enum > 132) then
													local A;
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
												else
													Stk[Inst[2]] = Inst[3] ~= 0;
												end
											elseif (Enum <= 146) then
												if (Enum <= 139) then
													if (Enum <= 136) then
														if (Enum <= 134) then
															local A;
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
														elseif (Enum == 135) then
															local A;
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
														else
															local A;
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Inst[4];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
														end
													elseif (Enum <= 137) then
														local A;
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Inst[4];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
													elseif (Enum == 138) then
														local FlatIdent_5D1D5 = 0;
														local A;
														while true do
															if (FlatIdent_5D1D5 == 7) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																break;
															end
															if (FlatIdent_5D1D5 == 0) then
																A = nil;
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																FlatIdent_5D1D5 = 1;
															end
															if (FlatIdent_5D1D5 == 2) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_5D1D5 = 3;
															end
															if (FlatIdent_5D1D5 == 1) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_5D1D5 = 2;
															end
															if (FlatIdent_5D1D5 == 6) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Inst[4];
																FlatIdent_5D1D5 = 7;
															end
															if (FlatIdent_5D1D5 == 5) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																FlatIdent_5D1D5 = 6;
															end
															if (4 == FlatIdent_5D1D5) then
																Inst = Instr[VIP];
																A = Inst[2];
																Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																FlatIdent_5D1D5 = 5;
															end
															if (FlatIdent_5D1D5 == 3) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_5D1D5 = 4;
															end
														end
													else
														local FlatIdent_30F3D = 0;
														local A;
														while true do
															if (FlatIdent_30F3D == 6) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																FlatIdent_30F3D = 7;
															end
															if (FlatIdent_30F3D == 0) then
																A = nil;
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																FlatIdent_30F3D = 1;
															end
															if (FlatIdent_30F3D == 3) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																FlatIdent_30F3D = 4;
															end
															if (FlatIdent_30F3D == 5) then
																Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Env[Inst[3]];
																FlatIdent_30F3D = 6;
															end
															if (FlatIdent_30F3D == 7) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																break;
															end
															if (FlatIdent_30F3D == 1) then
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																FlatIdent_30F3D = 2;
															end
															if (FlatIdent_30F3D == 4) then
																A = Inst[2];
																Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																VIP = VIP + 1;
																Inst = Instr[VIP];
																FlatIdent_30F3D = 5;
															end
															if (FlatIdent_30F3D == 2) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_30F3D = 3;
															end
														end
													end
												elseif (Enum <= 142) then
													if (Enum <= 140) then
														local A;
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
													elseif (Enum == 141) then
														local A;
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Stk[A + 1]);
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Stk[A + 1]);
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
													else
														local A = Inst[2];
														Stk[A](Unpack(Stk, A + 1, Inst[3]));
													end
												elseif (Enum <= 144) then
													if (Enum == 143) then
														local A;
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
													else
														local Edx;
														local Results, Limit;
														local A;
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Results, Limit = _R(Stk[A](Unpack(Stk, A + 1, Inst[3])));
														Top = (Limit + A) - 1;
														Edx = 0;
														for Idx = A, Top do
															Edx = Edx + 1;
															Stk[Idx] = Results[Edx];
														end
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A](Unpack(Stk, A + 1, Top));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
													end
												elseif (Enum == 145) then
													if (Stk[Inst[2]] ~= Stk[Inst[4]]) then
														VIP = VIP + 1;
													else
														VIP = Inst[3];
													end
												else
													Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
												end
											elseif (Enum <= 153) then
												if (Enum <= 149) then
													if (Enum <= 147) then
														local FlatIdent_64E7F = 0;
														local Edx;
														local Results;
														local Limit;
														local A;
														while true do
															if (FlatIdent_64E7F == 1) then
																A = Inst[2];
																Results, Limit = _R(Stk[A](Unpack(Stk, A + 1, Inst[3])));
																Top = (Limit + A) - 1;
																Edx = 0;
																for Idx = A, Top do
																	Edx = Edx + 1;
																	Stk[Idx] = Results[Edx];
																end
																VIP = VIP + 1;
																FlatIdent_64E7F = 2;
															end
															if (4 == FlatIdent_64E7F) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																A = Inst[2];
																Stk[A](Unpack(Stk, A + 1, Inst[3]));
																VIP = VIP + 1;
																Inst = Instr[VIP];
																FlatIdent_64E7F = 5;
															end
															if (FlatIdent_64E7F == 3) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Stk[Inst[3]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																FlatIdent_64E7F = 4;
															end
															if (FlatIdent_64E7F == 5) then
																Stk[Inst[2]] = Env[Inst[3]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																FlatIdent_64E7F = 6;
															end
															if (FlatIdent_64E7F == 2) then
																Inst = Instr[VIP];
																A = Inst[2];
																Stk[A](Unpack(Stk, A + 1, Top));
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Stk[Inst[3]];
																FlatIdent_64E7F = 3;
															end
															if (FlatIdent_64E7F == 6) then
																A = Inst[2];
																Stk[A](Stk[A + 1]);
																break;
															end
															if (FlatIdent_64E7F == 0) then
																Edx = nil;
																Results, Limit = nil;
																A = nil;
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																FlatIdent_64E7F = 1;
															end
														end
													elseif (Enum > 148) then
														local A;
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Stk[A + 1]);
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Stk[A + 1]);
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
													else
														local A;
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Stk[A + 1]);
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Stk[A + 1]);
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
													end
												elseif (Enum <= 151) then
													if (Enum == 150) then
														local FlatIdent_26F63 = 0;
														local A;
														while true do
															if (FlatIdent_26F63 == 0) then
																A = nil;
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																FlatIdent_26F63 = 1;
															end
															if (FlatIdent_26F63 == 7) then
																Inst = Instr[VIP];
																VIP = Inst[3];
																break;
															end
															if (FlatIdent_26F63 == 3) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																FlatIdent_26F63 = 4;
															end
															if (FlatIdent_26F63 == 6) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_26F63 = 7;
															end
															if (FlatIdent_26F63 == 4) then
																A = Inst[2];
																Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																VIP = VIP + 1;
																Inst = Instr[VIP];
																FlatIdent_26F63 = 5;
															end
															if (FlatIdent_26F63 == 5) then
																Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Inst[4];
																FlatIdent_26F63 = 6;
															end
															if (FlatIdent_26F63 == 1) then
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																FlatIdent_26F63 = 2;
															end
															if (FlatIdent_26F63 == 2) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_26F63 = 3;
															end
														end
													else
														local FlatIdent_EC4F = 0;
														while true do
															if (FlatIdent_EC4F == 0) then
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																FlatIdent_EC4F = 1;
															end
															if (FlatIdent_EC4F == 1) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																VIP = VIP + 1;
																FlatIdent_EC4F = 2;
															end
															if (FlatIdent_EC4F == 2) then
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Inst[4];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																FlatIdent_EC4F = 3;
															end
															if (FlatIdent_EC4F == 3) then
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																VIP = Inst[3];
																break;
															end
														end
													end
												elseif (Enum > 152) then
													Stk[Inst[2]] = Stk[Inst[3]];
												else
													local FlatIdent_387AE = 0;
													local A;
													while true do
														if (FlatIdent_387AE == 7) then
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Env[Inst[3]];
															break;
														end
														if (FlatIdent_387AE == 2) then
															Stk[A] = Stk[A](Stk[A + 1]);
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]];
															FlatIdent_387AE = 3;
														end
														if (FlatIdent_387AE == 3) then
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															FlatIdent_387AE = 4;
														end
														if (5 == FlatIdent_387AE) then
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															FlatIdent_387AE = 6;
														end
														if (FlatIdent_387AE == 6) then
															Stk[A] = Stk[A](Stk[A + 1]);
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]];
															FlatIdent_387AE = 7;
														end
														if (0 == FlatIdent_387AE) then
															A = nil;
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															FlatIdent_387AE = 1;
														end
														if (FlatIdent_387AE == 1) then
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															FlatIdent_387AE = 2;
														end
														if (FlatIdent_387AE == 4) then
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															FlatIdent_387AE = 5;
														end
													end
												end
											elseif (Enum <= 156) then
												if (Enum <= 154) then
													local A;
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A](Stk[A + 1]);
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A](Unpack(Stk, A + 1, Inst[3]));
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													VIP = Inst[3];
												elseif (Enum == 155) then
													Stk[Inst[2]] = Upvalues[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Env[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													if (Stk[Inst[2]] == Stk[Inst[4]]) then
														VIP = VIP + 1;
													else
														VIP = Inst[3];
													end
												else
													Stk[Inst[2]] = Stk[Inst[3]] + Stk[Inst[4]];
												end
											elseif (Enum <= 158) then
												if (Enum > 157) then
													local FlatIdent_48BB9 = 0;
													local B;
													local A;
													while true do
														if (FlatIdent_48BB9 == 4) then
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															FlatIdent_48BB9 = 5;
														end
														if (FlatIdent_48BB9 == 8) then
															A = Inst[2];
															B = Stk[Inst[3]];
															Stk[A + 1] = B;
															FlatIdent_48BB9 = 9;
														end
														if (FlatIdent_48BB9 == 6) then
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															FlatIdent_48BB9 = 7;
														end
														if (FlatIdent_48BB9 == 3) then
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															FlatIdent_48BB9 = 4;
														end
														if (FlatIdent_48BB9 == 2) then
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Upvalues[Inst[3]];
															FlatIdent_48BB9 = 3;
														end
														if (FlatIdent_48BB9 == 1) then
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															FlatIdent_48BB9 = 2;
														end
														if (FlatIdent_48BB9 == 0) then
															B = nil;
															A = nil;
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															FlatIdent_48BB9 = 1;
														end
														if (FlatIdent_48BB9 == 7) then
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															FlatIdent_48BB9 = 8;
														end
														if (FlatIdent_48BB9 == 5) then
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															FlatIdent_48BB9 = 6;
														end
														if (FlatIdent_48BB9 == 9) then
															Stk[A] = B[Inst[4]];
															break;
														end
													end
												else
													Stk[Inst[2]] = Upvalues[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]][Inst[3]] = Inst[4];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													do
														return;
													end
												end
											elseif (Enum > 159) then
												local FlatIdent_57FF4 = 0;
												local B;
												local A;
												while true do
													if (FlatIdent_57FF4 == 1) then
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														FlatIdent_57FF4 = 2;
													end
													if (FlatIdent_57FF4 == 7) then
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														FlatIdent_57FF4 = 8;
													end
													if (FlatIdent_57FF4 == 5) then
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														FlatIdent_57FF4 = 6;
													end
													if (FlatIdent_57FF4 == 8) then
														A = Inst[2];
														B = Stk[Inst[3]];
														Stk[A + 1] = B;
														FlatIdent_57FF4 = 9;
													end
													if (FlatIdent_57FF4 == 4) then
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														FlatIdent_57FF4 = 5;
													end
													if (6 == FlatIdent_57FF4) then
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														FlatIdent_57FF4 = 7;
													end
													if (FlatIdent_57FF4 == 3) then
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														FlatIdent_57FF4 = 4;
													end
													if (FlatIdent_57FF4 == 2) then
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Upvalues[Inst[3]];
														FlatIdent_57FF4 = 3;
													end
													if (FlatIdent_57FF4 == 0) then
														B = nil;
														A = nil;
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														FlatIdent_57FF4 = 1;
													end
													if (9 == FlatIdent_57FF4) then
														Stk[A] = B[Inst[4]];
														break;
													end
												end
											else
												local A;
												Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												A = Inst[2];
												Stk[A] = Stk[A](Stk[A + 1]);
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Stk[Inst[3]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Env[Inst[3]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												A = Inst[2];
												Stk[A] = Stk[A](Stk[A + 1]);
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Stk[Inst[3]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
											end
										elseif (Enum <= 187) then
											if (Enum <= 173) then
												if (Enum <= 166) then
													if (Enum <= 163) then
														if (Enum <= 161) then
															local A;
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Inst[4];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
														elseif (Enum > 162) then
															local FlatIdent_60BB = 0;
															local A;
															while true do
																if (3 == FlatIdent_60BB) then
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]] = Inst[3];
																	break;
																end
																if (0 == FlatIdent_60BB) then
																	A = nil;
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	FlatIdent_60BB = 1;
																end
																if (FlatIdent_60BB == 1) then
																	Stk[Inst[2]] = Inst[3];
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	A = Inst[2];
																	FlatIdent_60BB = 2;
																end
																if (FlatIdent_60BB == 2) then
																	Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																	VIP = VIP + 1;
																	Inst = Instr[VIP];
																	Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																	FlatIdent_60BB = 3;
																end
															end
														else
															local A;
															Stk[Inst[2]] = Env[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Stk[A + 1]);
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]]();
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
														end
													elseif (Enum <= 164) then
														local A;
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
													elseif (Enum == 165) then
														local FlatIdent_91AE4 = 0;
														while true do
															if (FlatIdent_91AE4 == 2) then
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																FlatIdent_91AE4 = 3;
															end
															if (1 == FlatIdent_91AE4) then
																Stk[Inst[2]] = Env[Inst[3]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																FlatIdent_91AE4 = 2;
															end
															if (FlatIdent_91AE4 == 3) then
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																FlatIdent_91AE4 = 4;
															end
															if (FlatIdent_91AE4 == 4) then
																if (Stk[Inst[2]] ~= Stk[Inst[4]]) then
																	VIP = VIP + 1;
																else
																	VIP = Inst[3];
																end
																break;
															end
															if (FlatIdent_91AE4 == 0) then
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																FlatIdent_91AE4 = 1;
															end
														end
													else
														local A;
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Upvalues[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
													end
												elseif (Enum <= 169) then
													if (Enum <= 167) then
														local FlatIdent_8849F = 0;
														local A;
														while true do
															if (FlatIdent_8849F == 1) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Env[Inst[3]];
																VIP = VIP + 1;
																FlatIdent_8849F = 2;
															end
															if (FlatIdent_8849F == 3) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_8849F = 4;
															end
															if (FlatIdent_8849F == 8) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																FlatIdent_8849F = 9;
															end
															if (FlatIdent_8849F == 2) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																FlatIdent_8849F = 3;
															end
															if (FlatIdent_8849F == 7) then
																Inst = Instr[VIP];
																A = Inst[2];
																Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																FlatIdent_8849F = 8;
															end
															if (FlatIdent_8849F == 0) then
																A = nil;
																Stk[Inst[2]][Inst[3]] = Inst[4];
																VIP = VIP + 1;
																FlatIdent_8849F = 1;
															end
															if (FlatIdent_8849F == 6) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_8849F = 7;
															end
															if (FlatIdent_8849F == 9) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Env[Inst[3]];
																break;
															end
															if (FlatIdent_8849F == 5) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_8849F = 6;
															end
															if (FlatIdent_8849F == 4) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_8849F = 5;
															end
														end
													elseif (Enum > 168) then
														local A;
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Inst[4];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
													else
														local A;
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Upvalues[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														VIP = Inst[3];
													end
												elseif (Enum <= 171) then
													if (Enum > 170) then
														local B;
														local A;
														A = Inst[2];
														B = Stk[Inst[3]];
														Stk[A + 1] = B;
														Stk[A] = B[Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														B = Stk[Inst[3]];
														Stk[A + 1] = B;
														Stk[A] = B[Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Upvalues[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Upvalues[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Stk[A + 1]);
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = {};
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														B = Stk[Inst[3]];
														Stk[A + 1] = B;
														Stk[A] = B[Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A](Stk[A + 1]);
														VIP = VIP + 1;
														Inst = Instr[VIP];
														VIP = Inst[3];
													else
														Stk[Inst[2]] = Upvalues[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Inst[4];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														do
															return;
														end
													end
												elseif (Enum > 172) then
													local Edx;
													local Results, Limit;
													local A;
													Stk[Inst[2]] = Env[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Results, Limit = _R(Stk[A](Unpack(Stk, A + 1, Inst[3])));
													Top = (Limit + A) - 1;
													Edx = 0;
													for Idx = A, Top do
														local FlatIdent_12F27 = 0;
														while true do
															if (FlatIdent_12F27 == 0) then
																Edx = Edx + 1;
																Stk[Idx] = Results[Edx];
																break;
															end
														end
													end
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A](Unpack(Stk, A + 1, Top));
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]];
												else
													local A;
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Env[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
												end
											elseif (Enum <= 180) then
												if (Enum <= 176) then
													if (Enum <= 174) then
														local A;
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Stk[A + 1]);
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]]();
														VIP = VIP + 1;
														Inst = Instr[VIP];
														for Idx = Inst[2], Inst[3] do
															Stk[Idx] = nil;
														end
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														VIP = Inst[3];
													elseif (Enum == 175) then
														local A;
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
													else
														local A;
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A](Stk[A + 1]);
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
													end
												elseif (Enum <= 178) then
													if (Enum == 177) then
														local FlatIdent_706CB = 0;
														local A;
														while true do
															if (FlatIdent_706CB == 0) then
																A = nil;
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																FlatIdent_706CB = 1;
															end
															if (FlatIdent_706CB == 4) then
																Inst = Instr[VIP];
																Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																FlatIdent_706CB = 5;
															end
															if (FlatIdent_706CB == 5) then
																Stk[Inst[2]][Inst[3]] = Inst[4];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																break;
															end
															if (3 == FlatIdent_706CB) then
																Inst = Instr[VIP];
																A = Inst[2];
																Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
																VIP = VIP + 1;
																FlatIdent_706CB = 4;
															end
															if (FlatIdent_706CB == 2) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_706CB = 3;
															end
															if (1 == FlatIdent_706CB) then
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																FlatIdent_706CB = 2;
															end
														end
													else
														local A;
														Stk[Inst[2]] = Env[Inst[3]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
													end
												elseif (Enum > 179) then
													local A = Inst[2];
													local Index = Stk[A];
													local Step = Stk[A + 2];
													if (Step > 0) then
														if (Index > Stk[A + 1]) then
															VIP = Inst[3];
														else
															Stk[A + 3] = Index;
														end
													elseif (Index < Stk[A + 1]) then
														VIP = Inst[3];
													else
														Stk[A + 3] = Index;
													end
												else
													local A;
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A](Stk[A + 1]);
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A](Unpack(Stk, A + 1, Inst[3]));
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Env[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A](Stk[A + 1]);
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]];
												end
											elseif (Enum <= 183) then
												if (Enum <= 181) then
													local A = Inst[2];
													Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
												elseif (Enum == 182) then
													local B;
													local A;
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Upvalues[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													B = Stk[Inst[3]];
													Stk[A + 1] = B;
													Stk[A] = B[Inst[4]];
												else
													do
														return;
													end
												end
											elseif (Enum <= 185) then
												if (Enum == 184) then
													local A;
													A = Inst[2];
													Stk[A] = Stk[A](Stk[A + 1]);
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Env[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A] = Stk[A](Stk[A + 1]);
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Env[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
												else
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]][Inst[3]] = Inst[4];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
												end
											elseif (Enum > 186) then
												local A;
												Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Env[Inst[3]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												A = Inst[2];
												Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
											else
												local A = Inst[2];
												Stk[A](Unpack(Stk, A + 1, Top));
											end
										elseif (Enum <= 200) then
											if (Enum <= 193) then
												if (Enum <= 190) then
													if (Enum <= 188) then
														local FlatIdent_71B9C = 0;
														local A;
														while true do
															if (FlatIdent_71B9C == 1) then
																Inst = Instr[VIP];
																A = Inst[2];
																Stk[A](Unpack(Stk, A + 1, Inst[3]));
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Env[Inst[3]];
																FlatIdent_71B9C = 2;
															end
															if (FlatIdent_71B9C == 2) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																A = Inst[2];
																FlatIdent_71B9C = 3;
															end
															if (FlatIdent_71B9C == 5) then
																A = Inst[2];
																Stk[A](Unpack(Stk, A + 1, Inst[3]));
																break;
															end
															if (FlatIdent_71B9C == 3) then
																Stk[A](Stk[A + 1]);
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Stk[Inst[3]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																FlatIdent_71B9C = 4;
															end
															if (FlatIdent_71B9C == 4) then
																Stk[Inst[2]] = Stk[Inst[3]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																FlatIdent_71B9C = 5;
															end
															if (FlatIdent_71B9C == 0) then
																A = nil;
																Stk[Inst[2]] = Stk[Inst[3]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_71B9C = 1;
															end
														end
													elseif (Enum > 189) then
														local FlatIdent_3FE90 = 0;
														local Edx;
														local Results;
														local Limit;
														local B;
														local A;
														while true do
															if (FlatIdent_3FE90 == 3) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																FlatIdent_3FE90 = 4;
															end
															if (FlatIdent_3FE90 == 2) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Env[Inst[3]];
																VIP = VIP + 1;
																FlatIdent_3FE90 = 3;
															end
															if (FlatIdent_3FE90 == 1) then
																A = Inst[2];
																B = Stk[Inst[3]];
																Stk[A + 1] = B;
																Stk[A] = B[Inst[4]];
																FlatIdent_3FE90 = 2;
															end
															if (FlatIdent_3FE90 == 5) then
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																FlatIdent_3FE90 = 6;
															end
															if (FlatIdent_3FE90 == 7) then
																A = Inst[2];
																Results, Limit = _R(Stk[A](Unpack(Stk, A + 1, Inst[3])));
																Top = (Limit + A) - 1;
																Edx = 0;
																FlatIdent_3FE90 = 8;
															end
															if (FlatIdent_3FE90 == 8) then
																for Idx = A, Top do
																	Edx = Edx + 1;
																	Stk[Idx] = Results[Edx];
																end
																VIP = VIP + 1;
																Inst = Instr[VIP];
																A = Inst[2];
																FlatIdent_3FE90 = 9;
															end
															if (FlatIdent_3FE90 == 0) then
																Edx = nil;
																Results, Limit = nil;
																B = nil;
																A = nil;
																FlatIdent_3FE90 = 1;
															end
															if (FlatIdent_3FE90 == 9) then
																Stk[A](Unpack(Stk, A + 1, Top));
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																break;
															end
															if (FlatIdent_3FE90 == 4) then
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																FlatIdent_3FE90 = 5;
															end
															if (6 == FlatIdent_3FE90) then
																Inst = Instr[VIP];
																Stk[Inst[2]] = Inst[3];
																VIP = VIP + 1;
																Inst = Instr[VIP];
																FlatIdent_3FE90 = 7;
															end
														end
													else
														VIP = Inst[3];
													end
												elseif (Enum <= 191) then
													local A;
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													VIP = Inst[3];
												elseif (Enum == 192) then
													local FlatIdent_1BB9C = 0;
													while true do
														if (FlatIdent_1BB9C == 3) then
															VIP = Inst[3];
															break;
														end
														if (2 == FlatIdent_1BB9C) then
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															FlatIdent_1BB9C = 3;
														end
														if (FlatIdent_1BB9C == 0) then
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															FlatIdent_1BB9C = 1;
														end
														if (FlatIdent_1BB9C == 1) then
															VIP = VIP + 1;
															Inst = Instr[VIP];
															for Idx = Inst[2], Inst[3] do
																Stk[Idx] = nil;
															end
															VIP = VIP + 1;
															FlatIdent_1BB9C = 2;
														end
													end
												else
													local NewProto = Proto[Inst[3]];
													local NewUvals;
													local Indexes = {};
													NewUvals = Setmetatable({}, {__index=function(_, Key)
														local FlatIdent_61D0C = 0;
														local Val;
														while true do
															if (0 == FlatIdent_61D0C) then
																Val = Indexes[Key];
																return Val[1][Val[2]];
															end
														end
													end,__newindex=function(_, Key, Value)
														local FlatIdent_898E8 = 0;
														local Val;
														while true do
															if (FlatIdent_898E8 == 0) then
																Val = Indexes[Key];
																Val[1][Val[2]] = Value;
																break;
															end
														end
													end});
													for Idx = 1, Inst[4] do
														VIP = VIP + 1;
														local Mvm = Instr[VIP];
														if (Mvm[1] == 153) then
															Indexes[Idx - 1] = {Stk,Mvm[3]};
														else
															Indexes[Idx - 1] = {Upvalues,Mvm[3]};
														end
														Lupvals[#Lupvals + 1] = Indexes;
													end
													Stk[Inst[2]] = Wrap(NewProto, NewUvals, Env);
												end
											elseif (Enum <= 196) then
												if (Enum <= 194) then
													local FlatIdent_8D4AA = 0;
													local A;
													while true do
														if (FlatIdent_8D4AA == 0) then
															A = nil;
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															FlatIdent_8D4AA = 1;
														end
														if (FlatIdent_8D4AA == 3) then
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															VIP = VIP + 1;
															FlatIdent_8D4AA = 4;
														end
														if (FlatIdent_8D4AA == 1) then
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															FlatIdent_8D4AA = 2;
														end
														if (FlatIdent_8D4AA == 4) then
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
															break;
														end
														if (2 == FlatIdent_8D4AA) then
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															FlatIdent_8D4AA = 3;
														end
													end
												elseif (Enum == 195) then
													local A;
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Env[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
												else
													local A;
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Env[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
												end
											elseif (Enum <= 198) then
												if (Enum > 197) then
													local A;
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]][Inst[3]] = Inst[4];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
												else
													local A;
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Env[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
												end
											elseif (Enum > 199) then
												local FlatIdent_4ADD0 = 0;
												local A;
												while true do
													if (FlatIdent_4ADD0 == 1) then
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A](Stk[A + 1]);
														FlatIdent_4ADD0 = 2;
													end
													if (FlatIdent_4ADD0 == 2) then
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														FlatIdent_4ADD0 = 3;
													end
													if (0 == FlatIdent_4ADD0) then
														A = nil;
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														FlatIdent_4ADD0 = 1;
													end
													if (FlatIdent_4ADD0 == 5) then
														VIP = VIP + 1;
														Inst = Instr[VIP];
														A = Inst[2];
														FlatIdent_4ADD0 = 6;
													end
													if (FlatIdent_4ADD0 == 4) then
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														FlatIdent_4ADD0 = 5;
													end
													if (FlatIdent_4ADD0 == 7) then
														Stk[Inst[2]] = Inst[3];
														break;
													end
													if (FlatIdent_4ADD0 == 6) then
														Stk[A](Unpack(Stk, A + 1, Inst[3]));
														VIP = VIP + 1;
														Inst = Instr[VIP];
														FlatIdent_4ADD0 = 7;
													end
													if (FlatIdent_4ADD0 == 3) then
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Stk[Inst[3]];
														FlatIdent_4ADD0 = 4;
													end
												end
											else
												local A;
												Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												A = Inst[2];
												Stk[A] = Stk[A](Stk[A + 1]);
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Stk[Inst[3]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]][Inst[3]] = Inst[4];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
											end
										elseif (Enum <= 207) then
											if (Enum <= 203) then
												if (Enum <= 201) then
													local B;
													local Edx;
													local Results, Limit;
													local A;
													Stk[Inst[2]] = Env[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Results, Limit = _R(Stk[A](Unpack(Stk, A + 1, Inst[3])));
													Top = (Limit + A) - 1;
													Edx = 0;
													for Idx = A, Top do
														local FlatIdent_81F0D = 0;
														while true do
															if (FlatIdent_81F0D == 0) then
																Edx = Edx + 1;
																Stk[Idx] = Results[Edx];
																break;
															end
														end
													end
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A](Unpack(Stk, A + 1, Top));
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													B = Stk[Inst[3]];
													Stk[A + 1] = B;
													Stk[A] = B[Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A](Stk[A + 1]);
												elseif (Enum > 202) then
													local FlatIdent_3B02 = 0;
													local A;
													while true do
														if (FlatIdent_3B02 == 7) then
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															break;
														end
														if (FlatIdent_3B02 == 5) then
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
															FlatIdent_3B02 = 6;
														end
														if (4 == FlatIdent_3B02) then
															Inst = Instr[VIP];
															A = Inst[2];
															Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
															FlatIdent_3B02 = 5;
														end
														if (FlatIdent_3B02 == 0) then
															A = nil;
															Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
															VIP = VIP + 1;
															FlatIdent_3B02 = 1;
														end
														if (FlatIdent_3B02 == 3) then
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															FlatIdent_3B02 = 4;
														end
														if (FlatIdent_3B02 == 1) then
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															FlatIdent_3B02 = 2;
														end
														if (6 == FlatIdent_3B02) then
															VIP = VIP + 1;
															Inst = Instr[VIP];
															Stk[Inst[2]][Inst[3]] = Inst[4];
															FlatIdent_3B02 = 7;
														end
														if (FlatIdent_3B02 == 2) then
															Inst = Instr[VIP];
															Stk[Inst[2]] = Inst[3];
															VIP = VIP + 1;
															FlatIdent_3B02 = 3;
														end
													end
												else
													local A;
													A = Inst[2];
													Stk[A] = Stk[A](Stk[A + 1]);
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Env[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A] = Stk[A](Stk[A + 1]);
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Env[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
												end
											elseif (Enum <= 205) then
												if (Enum > 204) then
													local A;
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A] = Stk[A](Stk[A + 1]);
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Env[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													A = Inst[2];
													Stk[A] = Stk[A](Stk[A + 1]);
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Env[Inst[3]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
												else
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
													VIP = VIP + 1;
													Inst = Instr[VIP];
													Stk[Inst[2]] = Inst[3];
												end
											elseif (Enum > 206) then
												local A;
												Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												A = Inst[2];
												Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]][Inst[3]] = Inst[4];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
											else
												local FlatIdent_2B3ED = 0;
												local A;
												while true do
													if (FlatIdent_2B3ED == 0) then
														A = nil;
														Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
														VIP = VIP + 1;
														FlatIdent_2B3ED = 1;
													end
													if (FlatIdent_2B3ED == 6) then
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Inst[4];
														FlatIdent_2B3ED = 7;
													end
													if (FlatIdent_2B3ED == 3) then
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														FlatIdent_2B3ED = 4;
													end
													if (FlatIdent_2B3ED == 5) then
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
														FlatIdent_2B3ED = 6;
													end
													if (FlatIdent_2B3ED == 2) then
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														FlatIdent_2B3ED = 3;
													end
													if (FlatIdent_2B3ED == 1) then
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														VIP = VIP + 1;
														FlatIdent_2B3ED = 2;
													end
													if (FlatIdent_2B3ED == 4) then
														Inst = Instr[VIP];
														A = Inst[2];
														Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
														FlatIdent_2B3ED = 5;
													end
													if (7 == FlatIdent_2B3ED) then
														VIP = VIP + 1;
														Inst = Instr[VIP];
														Stk[Inst[2]] = Inst[3];
														break;
													end
												end
											end
										elseif (Enum <= 210) then
											if (Enum <= 208) then
												local A = Inst[2];
												Stk[A] = Stk[A](Stk[A + 1]);
											elseif (Enum == 209) then
												Stk[Inst[2]] = Env[Inst[3]];
											else
												local A;
												Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												A = Inst[2];
												Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]][Inst[3]] = Inst[4];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
											end
										elseif (Enum <= 212) then
											if (Enum > 211) then
												local A;
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												A = Inst[2];
												Stk[A](Stk[A + 1]);
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Stk[Inst[3]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Stk[Inst[3]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												A = Inst[2];
												Stk[A](Unpack(Stk, A + 1, Inst[3]));
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												VIP = Inst[3];
											else
												local A;
												Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												A = Inst[2];
												Stk[A] = Stk[A](Stk[A + 1]);
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Stk[Inst[3]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Env[Inst[3]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												A = Inst[2];
												Stk[A] = Stk[A](Stk[A + 1]);
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Stk[Inst[3]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
											end
										elseif (Enum == 213) then
											local A;
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
										else
											local A;
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]][Inst[3]] = Inst[4];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]][Inst[3]] = Inst[4];
										end
										VIP = VIP + 1;
										break;
									end
								end
							end
						end;
					end
				end
			end
			return Wrap(Deserialize(), {}, vmenv)(...);
		end
		if (FlatIdent_76979 == 1) then
			gBit = nil;
			function gBit(Bit, Start, End)
				if End then
					local Res = (Bit / (2 ^ (Start - 1))) % (2 ^ (((End - 1) - (Start - 1)) + 1));
					return Res - (Res % 1);
				else
					local Plc = 2 ^ (Start - 1);
					return (((Bit % (Plc + Plc)) >= Plc) and 1) or 0;
				end
			end
			gBits8 = nil;
			FlatIdent_76979 = 2;
		end
	end
end
VMCalletFEnv(), ...);
